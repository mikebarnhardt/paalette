{"version":3,"sources":["components/color.js","components/footer.js","components/header.js","components/paalette.js","utilities/serviceWorker.js","index.js"],"names":["getColor","color1","color2","ratio","method","color","tinycolor","clone","readability","Color","props","removeColor","isValid","swatches","adjustedColor","darken","lighten","toHexString","react_default","a","createElement","key","className","onClick","Object","keys","map","value","colorValue","parseInt","style","backgroundColor","Footer","href","rel","target","pkg","version","Header","addColor","React","createRef","onSubmit","event","preventDefault","current","ref","type","initialState","Paalette","_useState","useState","_useState2","slicedToArray","colors","setColors","concat","toConsumableArray","slice","indexOf","header","components_color","length","margin","footer","Boolean","window","location","hostname","match","ReactDOM","render","paalette","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6f05ab0.chunk.js","sourcesContent":["import React from 'react';\nimport tinycolor from 'tinycolor2';\n\nfunction getColor(color1, color2, ratio, method) {\n  const color = tinycolor(color1).clone();\n\n  while(tinycolor.readability(color, color2) < ratio) {\n    if (tinycolor.readability(color, color2) >= ratio) {\n      break;\n    }\n\n    color[method](0.1);\n  }\n\n  return color;\n}\n\nfunction Color(props) {\n  const {\n    color,\n    removeColor\n  } = props;\n\n  // Don't render if the color is invalid.\n  if (!tinycolor(color).isValid()) {\n    return null;\n  }\n\n  const swatches = {};\n\n  const adjustedColor = tinycolor(color).clone();\n\n  if (tinycolor.readability(adjustedColor, 'white') < 4.5) {\n    while(tinycolor.readability(adjustedColor, 'white') < 4.5) {\n      adjustedColor.darken(0.1);\n    }\n  } else {\n    while(tinycolor.readability(adjustedColor, 'white') > 4.55) {\n      adjustedColor.lighten(0.1);\n    }\n  }\n\n  swatches['50'] = adjustedColor.toHexString();\n\n  swatches['40'] = getColor(swatches['50'], swatches['50'], 1.35, 'lighten').toHexString();\n  swatches['30'] = getColor(swatches['40'], swatches['40'], 1.35, 'lighten').toHexString();\n  swatches['20'] = getColor(swatches['30'], swatches['30'], 1.35, 'lighten').toHexString();\n  swatches['10'] = getColor(swatches['20'], swatches['20'], 1.35, 'lighten').toHexString();\n\n  swatches['60'] = getColor(swatches['50'], swatches['50'], 1.35, 'darken').toHexString();\n  swatches['70'] = getColor(swatches['60'], swatches['60'], 1.35, 'darken').toHexString();\n  swatches['80'] = getColor(swatches['70'], swatches['70'], 1.35, 'darken').toHexString();\n  swatches['90'] = getColor(swatches['80'], swatches['80'], 1.35, 'darken').toHexString();\n\n  return (\n    <div key={color} className=\"o-layout-item is-expanded\">\n      <div className=\"c-swatches\">\n        <button\n          className=\"c-swatches-options\"\n          onClick={() => removeColor(color)}\n        >\n          &times;\n        </button>\n\n        {Object.keys(swatches).map(value => {\n          let colorValue = value < 50 ? (parseInt(value, 10) + 50) : (parseInt(value, 10) - 50);\n\n          return (\n            <div\n              key={value}\n              className=\"c-swatch\"\n              style={{\n                backgroundColor: swatches[value],\n                color: !colorValue ? 'white' : swatches[colorValue]\n              }}\n            >\n              {swatches[value]}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Color;\n","import React from 'react';\nimport pkg from '../../package.json';\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>\n        <a\n          href=\"https://github.com/mikebarnhardt/paalette\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {pkg.version}\n        </a>\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction Header(props) {\n  const { addColor } = props;\n  const color = React.createRef();\n\n  return (\n    <header>\n      <nav className=\"c-nav\">\n        <div className=\"c-nav-item\">\n          <a href=\"https://github.com/mikebarnhardt/paalette\">Paalette</a>\n        </div>\n\n        <div className=\"c-nav-item is-expanded\" />\n\n        <div className=\"c-nav-item\">\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              addColor(color.current.value);\n            }}\n          >\n            <div className=\"o-layout is-horizontal\">\n                <div className=\"o-layout-item\">\n                  <input className=\"c-text-input\" ref={color}/>\n                </div>\n\n                <div className=\"o-layout-item\">\n                  <button\n                    className=\"c-button\"\n                    type=\"submit\"\n                  >\n                    Add Color\n                  </button>\n                </div>\n            </div>\n          </form>\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header;\n","import React, {useState} from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport Color from './color';\nimport Footer from './footer';\nimport Header from './header';\n\n// Vanilla Theme\n// const initialState = ['#6a456a','#63d8f9','#b3dbff','#f9cdcf','#f39db7'];\n\n// Rem Theme\n// const initialState = ['#211a21', '#4f43ae', '#b5b6e4'];\n\n// Devour Theme\nconst initialState = ['#435', '#f35'];\n\nfunction Paalette(props) {\n  const [colors, setColors] = useState(initialState);\n\n  function addColor(color) {\n    if (!tinycolor(color).isValid()) {\n      return;\n    }\n\n    setColors([...colors, color]);\n  }\n\n  function removeColor(color) {\n    setColors([\n      ...colors.slice(0, colors.indexOf(color)),\n      ...colors.slice(colors.indexOf(color) + 1)\n    ]);\n  }\n\n  return (\n    <div className=\"o-layout is-flush is-full-height is-vertical\">\n      <Header addColor={addColor}/>\n\n      <div className=\"o-layout is-flush is-horizontal@for-tablet-landscape-up o-layout-item is-expanded\">\n        {colors.map(color => (\n          <Color key={color} color={color} removeColor={removeColor}/>\n        ))}\n\n        {!colors.length && (\n          <p style={{margin: 'auto'}}>\n            Add a color to get started!\n          </p>\n        )}\n      </div>\n\n      <Footer/>\n    </div>\n  );\n}\n\nexport default Paalette;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Paalette from './components/paalette';\nimport * as serviceWorker from './utilities/serviceWorker';\n\nimport './styles/styles.scss';\n\nReactDOM.render(<Paalette />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}