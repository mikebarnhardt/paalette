{"version":3,"sources":["ease-out-quad.js","get-contrast-color.js","set-saturation.js","styled-color.js","styled-swatch.js","swatch.js","color.js","footer.js","styled-colors.js","styled-global.js","styled-paalette.js","paalette.js","serviceWorker.js","index.js"],"names":["easeOutQuad","types","base-light","ui-light","aa-light","aaa-light","ui-aa-light","base-dark","ui-dark","aa-dark","aaa-dark","ui-aa-dark","isColorMax","color","l","toHsl","adjustColor","original","type","method","clone","tinycolor","readability","getContrastColor","setSaturation","StyledColor","styled","div","_templateObject","StyledSwatch","styled_swatch_templateObject","props","Swatch","react_default","a","createElement","styled_swatch","Color","setColor","input","_useState","useState","s","_useState2","Object","slicedToArray","saturation","_useState3","h","_useState4","hue","setHue","colors","objectSpread","darken","lighten","sortedColors","keys","sort","b","getLuminance","finalColors","forEach","key","index","hex","toHexString","includes","push","styled_color","onChange","event","value","_ref","target","max","min","_ref2","map","swatch","Footer","href","pkg","version","StyledColors","styled_colors_templateObject","StyledGlobal","createGlobalStyle","styled_global_templateObject","StyledPaalette","styled_paalette_templateObject","Paalette","setColors","indexOfColor","indexOf","updatedColor","concat","toConsumableArray","slice","styled_paalette","styled_global","styled_colors","src_color","footer","Boolean","window","location","hostname","match","ReactDOM","render","paalette","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de6f9e4a.chunk.js","sourcesContent":["function easeOutQuad(t) {\n  return t*(2-t);\n}\n\nexport default easeOutQuad;\n","import tinycolor from 'tinycolor2';\n\nconst types = {\n  'base-light': 1,\n  'ui-light': 3,\n  'aa-light': 4.5,\n  'aaa-light': 7,\n  'ui-aa-light': 4.5,\n  'base-dark': 1,\n  'ui-dark': 3,\n  'aa-dark': 4.5,\n  'aaa-dark': 7,\n  'ui-aa-dark': 4.5,\n};\n\nfunction isColorMax(color) {\n  const {l} = color.toHsl();\n\n  if (l <= 0 || l >= 1) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction adjustColor(original, type, method) {\n  const color = original.clone();\n\n  while (tinycolor.readability(original, color) < types[type]) {\n    if (isColorMax(color)) {\n      break;\n    }\n\n    if (tinycolor.readability(original, color) > types[type]) {\n      break;\n    }\n\n    color[method](1);\n  }\n\n  return color;\n}\n\nfunction getContrastColor(color, type) {\n  switch(type) {\n    case 'ui-light':\n      return adjustColor(color, type, 'darken');\n    case 'aa-light':\n      return adjustColor(color, type, 'darken');\n    case 'aaa-light':\n      return adjustColor(color, type, 'darken');\n    case 'ui-aa-light':\n      return adjustColor(color, type, 'darken');\n\n    case 'ui-dark':\n      return adjustColor(color, type, 'lighten');\n    case 'aa-dark':\n      return adjustColor(color, type, 'lighten');\n    case 'aaa-dark':\n      return adjustColor(color, type, 'lighten');\n    case 'ui-aa-dark':\n      return adjustColor(color, type, 'darken');\n    default:\n      return color;\n  }\n}\n\nexport default getContrastColor;\n","import tinycolor from 'tinycolor2';\n\nimport clamp from './clamp';\n\nfunction setSaturation(input, saturation) {\n  const color = tinycolor(input).toHsl();\n  color.s = clamp(saturation);\n  return tinycolor(color);\n}\n\nexport default setSaturation;\n","import styled from 'styled-components';\n\nconst StyledColor = styled.div`\n  background-color: white;\n  border: 1px solid rgba(16, 32, 48, 0.16);\n  border-radius: 0.125rem;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 1.5rem;\n\n  &:not(:first-child) {\n    margin-left: 1rem;\n  }\n`;\n\nexport default StyledColor;\n","import styled from 'styled-components';\n\nconst StyledSwatch = styled.div`\n  background-color: ${props => props.color};\n  /* border: 0.0625rem solid #484848; */\n  /* border-radius: 0.125rem; */\n  height: 4vh;\n  padding: 1rem;\n  width: 4vw;\n`;\n\nexport default StyledSwatch;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport getContrastColor from './get-contrast-color';\nimport StyledSwatch from './styled-swatch';\n\nfunction Swatch(props) {\n  const {\n    color,\n  } = props;\n\n  return (\n    <StyledSwatch color={color}>\n      {color}\n    </StyledSwatch>\n  );\n}\n\nexport default Swatch;\n","import React, {useState} from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport easeOutQuad from './ease-out-quad';\nimport getContrastColor from './get-contrast-color';\nimport setSaturation from './set-saturation';\nimport StyledColor from './styled-color';\nimport Swatch from './swatch';\n\nfunction Color(props) {\n  const {\n    color,\n    setColor,\n  } = props;\n\n  const input = tinycolor(color);\n\n  const [saturation, setSaturation] = useState(input.toHsl().s * 100);\n  const [hue, setHue] = useState(input.toHsl().h);\n\n  const colors = {};\n\n  colors['base-light'] = tinycolor({...input.toHsl(), h: hue, s: saturation / 100, l: 96});\n  colors['aa-light'] = getContrastColor(colors['base-light'], 'aa-light');\n  colors['aaa-light'] = getContrastColor(colors['base-light'], 'aaa-light');\n  colors['ui-light'] = getContrastColor(colors['base-light'], 'ui-light');\n  colors['ui-hover-light'] = colors['ui-light'].clone().darken(4);\n  colors['ui-aa-light'] = getContrastColor(colors['ui-hover-light'], 'ui-aa-light');\n\n  colors['base-dark'] = colors['aaa-light'];\n  colors['aa-dark'] = getContrastColor(colors['base-dark'], 'aa-dark');\n  colors['aaa-dark'] = colors['base-light'];\n  colors['ui-dark'] = getContrastColor(colors['base-dark'], 'ui-dark');\n  colors['ui-hover-dark'] = colors['ui-dark'].clone().lighten(4);\n  colors['ui-aa-dark'] = getContrastColor(colors['ui-hover-dark'], 'ui-aa-dark');\n\n  const sortedColors = Object.keys(colors);\n  sortedColors.sort((a,b) => {\n    return colors[b].getLuminance() - colors[a].getLuminance();\n  });\n\n  const finalColors = [];\n  sortedColors.forEach((key, index) => {\n    const hex = colors[key].toHexString();\n\n    if (!finalColors.includes(hex)) {\n      finalColors.push(hex);\n    }\n  });\n\n  return (\n    <StyledColor>\n      <input onChange={(event) => setColor(color, event)} type=\"text\" value={color}/>\n      <input onChange={({target}) => setSaturation(target.value)} type=\"range\" value={saturation}/>\n      <input max=\"360\" min=\"0\" onChange={({target}) => setHue(target.value)} type=\"range\" value={hue}/>\n      {finalColors.map(hex => <Swatch key={hex} color={hex} />)}\n    </StyledColor>\n  );\n}\n\nexport default Color;\n","import React from 'react';\nimport pkg from '../package.json';\n\nfunction Footer() {\n  return (\n    <footer>\n      <p><a href=\"https://github.com/mikebarnhardt/paalette\">{pkg.version}</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import styled from 'styled-components';\n\nconst StyledColors = styled.div`\n  display: flex;\n`;\n\nexport default StyledColors;\n","import {createGlobalStyle} from 'styled-components';\n\nconst StyledGlobal = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n  }\n`;\n\nexport default StyledGlobal;\n","import styled from 'styled-components';\n\nconst StyledPaalette = styled.div`\n  align-items: center;\n  background-color: #f8f8f8;\n  color: #484848;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  justify-content: center;\n  min-height: 100vh;\n  text-align: center;\n`;\n\nexport default StyledPaalette;\n","import React, { useState } from 'react';\n\nimport Color from './color';\nimport Footer from './footer';\nimport StyledColors from './styled-colors';\nimport StyledGlobal from './styled-global';\nimport StyledPaalette from './styled-paalette';\n\nfunction Paalette(props) {\n  const [colors, setColors] = useState(['#957595', '#33b1f9', '#537bd9', '#f39d97', '#d37d97']);\n\n  function setColor(color, event) {\n    const indexOfColor = colors.indexOf(color);\n    const updatedColor = event.target.value;\n\n    setColors([\n      ...colors.slice(0, indexOfColor),\n      updatedColor,\n      ...colors.slice(indexOfColor + 1)\n    ]);\n  }\n\n  return (\n    <StyledPaalette>\n      <StyledGlobal/>\n      <StyledColors>\n        {colors.map((color, index) => <Color key={index} color={color} setColor={setColor}/>)}\n      </StyledColors>\n      <Footer/>\n    </StyledPaalette>\n  );\n}\n\nexport default Paalette;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Paalette from './paalette';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Paalette />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}